   /*-----------------------------------------------------------
   SAS Code Generated by LASR Analytic Server for Neural Network
     Date                   : 16Oct2016:20:14:41
     Locale                 : en_US
     Response variable      : Cena
     Number of nodes        : 6
     Number of input nodes  : 2
     Number of output nodes : 1
     Number of hidden nodes : 3
     Number of hidden layers: 1
     Type of neural nets    : MLP
     ---------------------------------------------------------*/

   length _strfmt_ $12; drop _strfmt_;
   _strfmt_ = ' ';

    NN_Cena = .;
   array _node_val_0_{6} _temporary_; 

   _badval_ = 0;

   _numval_ = PojemoscSilnika;
   if missing(_numval_) then do;
      _badval_ = 1; goto skip_0; 
   end;
   _tval_ =     1.17050024621508;
   _sumval_ =     3.23415841584158;
   _numval_ = (_numval_-_sumval_)/_tval_;
   _node_val_0_{1} = _numval_;
   _numval_ = MocKM;
   if missing(_numval_) then do;
      _badval_ = 1; goto skip_0; 
   end;
   _tval_ =     74.7386245446331;
   _sumval_ =     217.747524752475;
   _numval_ = (_numval_-_sumval_)/_tval_;
   _node_val_0_{2} = _numval_;

   _sumval_ = 0.0;
   _numval_ = 0.0;
   _tval_   = 0.0;
   _bias_   =                  -20;
   _nval_ = _node_val_0_{1};
   _tval_ = _nval_ *    -13.7998867270756;
   _numval_ + _tval_;
   _nval_ = _node_val_0_{2};
   _tval_ = _nval_ *    -19.5892385271212;
   _numval_ + _tval_;
   _numval_ + _bias_;
   _tval_ = 2.0*_numval_;
   if (_tval_ gt     704.782712893384) then do;
      _numval_ = 1.0;
   end;
   else if (_tval_ lt         -708.3964185) then do;
      _tval_ = 0.0;
      _numval_ = 1.0-2.0/(1.0+_tval_);
   end;
   else do;
      _tval_ = exp(_tval_);
      _numval_ = 1.0-2.0/(1.0+_tval_);
   end;
   _node_val_0_{3} = _numval_;
   _numval_ = 0.0;
   _tval_   = 0.0;
   _bias_   =                   20;
   _nval_ = _node_val_0_{1};
   _tval_ = _nval_ *    -2.45047446882577;
   _numval_ + _tval_;
   _nval_ = _node_val_0_{2};
   _tval_ = _nval_ *    -0.75502706588849;
   _numval_ + _tval_;
   _numval_ + _bias_;
   _tval_ = 2.0*_numval_;
   if (_tval_ gt     704.782712893384) then do;
      _numval_ = 1.0;
   end;
   else if (_tval_ lt         -708.3964185) then do;
      _tval_ = 0.0;
      _numval_ = 1.0-2.0/(1.0+_tval_);
   end;
   else do;
      _tval_ = exp(_tval_);
      _numval_ = 1.0-2.0/(1.0+_tval_);
   end;
   _node_val_0_{4} = _numval_;
   _numval_ = 0.0;
   _tval_   = 0.0;
   _bias_   =                   20;
   _nval_ = _node_val_0_{1};
   _tval_ = _nval_ *      5.6311890296076;
   _numval_ + _tval_;
   _nval_ = _node_val_0_{2};
   _tval_ = _nval_ *     7.24439457264213;
   _numval_ + _tval_;
   _numval_ + _bias_;
   _tval_ = 2.0*_numval_;
   if (_tval_ gt     704.782712893384) then do;
      _numval_ = 1.0;
   end;
   else if (_tval_ lt         -708.3964185) then do;
      _tval_ = 0.0;
      _numval_ = 1.0-2.0/(1.0+_tval_);
   end;
   else do;
      _tval_ = exp(_tval_);
      _numval_ = 1.0-2.0/(1.0+_tval_);
   end;
   _node_val_0_{5} = _numval_;
   _numval_ = 0.0;
   _tval_   = 0.0;
   _bias_   =                   20;
   _nval_ = _node_val_0_{3};
   _tval_ = _nval_ *                  -20;
   _numval_ + _tval_;
   _nval_ = _node_val_0_{4};
   _tval_ = _nval_ *                   20;
   _numval_ + _tval_;
   _nval_ = _node_val_0_{5};
   _tval_ = _nval_ *                   20;
   _numval_ + _tval_;
   _numval_ + _bias_;
   _node_val_0_{6} = _numval_;
   skip_0:
   if (_badval_ eq 1) then do;
      NN_Cena = .;
   end;
   else do;
      NN_Cena = _node_val_0_{6};
   end;

   drop _numval_;
   drop _sumval_;
   drop _bias_;
   drop _tval_;
   drop _nval_;
   drop _badval_;

