   /*-----------------------------------------------------------
   SAS Code Generated by LASR Analytic Server for Neural Network
     Date                   : 16Oct2016:20:38:26
     Locale                 : en_US
     Response variable      : Gatunek
     Number of nodes        : 10
     Number of input nodes  : 4
     Number of output nodes : 3
     Number of hidden nodes : 3
     Number of hidden layers: 1
     Type of neural nets    : MLP
     Number of neural nets  : 1
     ---------------------------------------------------------*/

   length _strfmt_ $12; drop _strfmt_;
   _strfmt_ = ' ';

   array _tlevname_0_{3} $10 _temporary_ ( 'Setosa' 
   'Versicolor' 
   'Virginica');

   length NN_Gatunek $10;
   array _node_val_0_{10} _temporary_; 

   _badval_ = 0;

   _numval_ = DlugoscDzialekKielicha;
   if missing(_numval_) then do;
      _badval_ = 1; goto skip_0; 
   end;
   _tval_ =     8.78679300323311;
   _sumval_ =     58.5342465753424;
   _numval_ = (_numval_-_sumval_)/_tval_;
   _node_val_0_{1} = _numval_;
   _numval_ = SzerokoscDzialekKielicha;
   if missing(_numval_) then do;
      _badval_ = 1; goto skip_0; 
   end;
   _tval_ =     4.13635121678856;
   _sumval_ =     31.0136986301369;
   _numval_ = (_numval_-_sumval_)/_tval_;
   _node_val_0_{2} = _numval_;
   _numval_ = DlugoscPlatka;
   if missing(_numval_) then do;
      _badval_ = 1; goto skip_0; 
   end;
   _tval_ =     18.9808053086073;
   _sumval_ =     37.0547945205479;
   _numval_ = (_numval_-_sumval_)/_tval_;
   _node_val_0_{3} = _numval_;
   _numval_ = SzerokoscPlatka;
   if missing(_numval_) then do;
      _badval_ = 1; goto skip_0; 
   end;
   _tval_ =     8.08597543197064;
   _sumval_ =     11.7123287671232;
   _numval_ = (_numval_-_sumval_)/_tval_;
   _node_val_0_{4} = _numval_;

   _sumval_ = 0.0;
   _numval_ = 0.0;
   _tval_   = 0.0;
   _bias_   =     -9.1306982541474;
   _nval_ = _node_val_0_{1};
   _tval_ = _nval_ *     0.06172099211098;
   _numval_ + _tval_;
   _nval_ = _node_val_0_{2};
   _tval_ = _nval_ *    -0.25694828786006;
   _numval_ + _tval_;
   _nval_ = _node_val_0_{3};
   _tval_ = _nval_ *     10.1078678618315;
   _numval_ + _tval_;
   _nval_ = _node_val_0_{4};
   _tval_ = _nval_ *     1.90571356721147;
   _numval_ + _tval_;
   _numval_ + _bias_;
   _tval_ = 2.0*_numval_;
   if (_tval_ gt     704.782712893384) then do;
      _numval_ = 1.0;
   end;
   else if (_tval_ lt         -708.3964185) then do;
      _tval_ = 0.0;
      _numval_ = 1.0-2.0/(1.0+_tval_);
   end;
   else do;
      _tval_ = exp(_tval_);
      _numval_ = 1.0-2.0/(1.0+_tval_);
   end;
   _node_val_0_{5} = _numval_;
   _numval_ = 0.0;
   _tval_   = 0.0;
   _bias_   =    -1.29682311069371;
   _nval_ = _node_val_0_{1};
   _tval_ = _nval_ *      0.9308531755666;
   _numval_ + _tval_;
   _nval_ = _node_val_0_{2};
   _tval_ = _nval_ *    -2.47521723746321;
   _numval_ + _tval_;
   _nval_ = _node_val_0_{3};
   _tval_ = _nval_ *     2.41715118905132;
   _numval_ + _tval_;
   _nval_ = _node_val_0_{4};
   _tval_ = _nval_ *     0.86233306853742;
   _numval_ + _tval_;
   _numval_ + _bias_;
   _tval_ = 2.0*_numval_;
   if (_tval_ gt     704.782712893384) then do;
      _numval_ = 1.0;
   end;
   else if (_tval_ lt         -708.3964185) then do;
      _tval_ = 0.0;
      _numval_ = 1.0-2.0/(1.0+_tval_);
   end;
   else do;
      _tval_ = exp(_tval_);
      _numval_ = 1.0-2.0/(1.0+_tval_);
   end;
   _node_val_0_{6} = _numval_;
   _numval_ = 0.0;
   _tval_   = 0.0;
   _bias_   =     0.97016412393107;
   _nval_ = _node_val_0_{1};
   _tval_ = _nval_ *     1.21279541786768;
   _numval_ + _tval_;
   _nval_ = _node_val_0_{2};
   _tval_ = _nval_ *    -1.27655329580764;
   _numval_ + _tval_;
   _nval_ = _node_val_0_{3};
   _tval_ = _nval_ *     1.52823202837399;
   _numval_ + _tval_;
   _nval_ = _node_val_0_{4};
   _tval_ = _nval_ *     2.64590022350876;
   _numval_ + _tval_;
   _numval_ + _bias_;
   _tval_ = 2.0*_numval_;
   if (_tval_ gt     704.782712893384) then do;
      _numval_ = 1.0;
   end;
   else if (_tval_ lt         -708.3964185) then do;
      _tval_ = 0.0;
      _numval_ = 1.0-2.0/(1.0+_tval_);
   end;
   else do;
      _tval_ = exp(_tval_);
      _numval_ = 1.0-2.0/(1.0+_tval_);
   end;
   _node_val_0_{7} = _numval_;
   _numval_ = 0.0;
   _tval_   = 0.0;
   _bias_   =                    0;
   _numval_ + _bias_;
   _tval_ = _numval_;
   if (_tval_ ge     704.782712893384) then do;
      _tval_ =     704.782712893384;
   end;
   else if (_tval_ lt         -708.3964185) then do;
      _tval_ = 0.0;
   end;
   else do;
      _tval_ = exp(_tval_);
   end;
   _numval_ = _tval_;
   if (_numval_ ge     704.782712893384) then do;
      _numval_ =     704.782712893384;
   end;
   _sumval_ + _numval_;
   _node_val_0_{8} = _numval_;
   _numval_ = 0.0;
   _tval_   = 0.0;
   _bias_   =    -8.02658408705173;
   _nval_ = _node_val_0_{5};
   _tval_ = _nval_ *    -6.96524820091662;
   _numval_ + _tval_;
   _nval_ = _node_val_0_{6};
   _tval_ = _nval_ *      1.9172173250459;
   _numval_ + _tval_;
   _nval_ = _node_val_0_{7};
   _tval_ = _nval_ *     9.70256128617447;
   _numval_ + _tval_;
   _numval_ + _bias_;
   _tval_ = _numval_;
   if (_tval_ ge     704.782712893384) then do;
      _tval_ =     704.782712893384;
   end;
   else if (_tval_ lt         -708.3964185) then do;
      _tval_ = 0.0;
   end;
   else do;
      _tval_ = exp(_tval_);
   end;
   _numval_ = _tval_;
   if (_numval_ ge     704.782712893384) then do;
      _numval_ =     704.782712893384;
   end;
   _sumval_ + _numval_;
   _node_val_0_{9} = _numval_;
   _numval_ = 0.0;
   _tval_   = 0.0;
   _bias_   =     3.51016268709074;
   _nval_ = _node_val_0_{5};
   _tval_ = _nval_ *     15.9593181916274;
   _numval_ + _tval_;
   _nval_ = _node_val_0_{6};
   _tval_ = _nval_ *     4.21645687791668;
   _numval_ + _tval_;
   _nval_ = _node_val_0_{7};
   _tval_ = _nval_ *      8.8306314439591;
   _numval_ + _tval_;
   _numval_ + _bias_;
   _tval_ = _numval_;
   if (_tval_ ge     704.782712893384) then do;
      _tval_ =     704.782712893384;
   end;
   else if (_tval_ lt         -708.3964185) then do;
      _tval_ = 0.0;
   end;
   else do;
      _tval_ = exp(_tval_);
   end;
   _numval_ = _tval_;
   if (_numval_ ge     704.782712893384) then do;
      _numval_ =     704.782712893384;
   end;
   _sumval_ + _numval_;
   _node_val_0_{10} = _numval_;
   _numval_ = _node_val_0_{8};
   _numval_ = _numval_ / _sumval_;
   _node_val_0_{8} = _numval_;
   _numval_ = _node_val_0_{9};
   _numval_ = _numval_ / _sumval_;
   _node_val_0_{9} = _numval_;
   _numval_ = _node_val_0_{10};
   _numval_ = _numval_ / _sumval_;
   _node_val_0_{10} = _numval_;
   skip_0:
   if (_badval_ eq 1) then do;
      NN_Gatunek = ' ';
      NN_P_Gatunek = .  ;
   end;
   else do;
      _nn_pred_lev_ = -1;
      NN_P_Gatunek = 0.0;
      _numval_ = _node_val_0_{8};
      if (_numval_ gt NN_P_Gatunek) then do;
         NN_P_Gatunek = _numval_;
         _nn_pred_lev_ = 1;
      end;
      _numval_ = _node_val_0_{9};
      if (_numval_ gt NN_P_Gatunek) then do;
         NN_P_Gatunek = _numval_;
         _nn_pred_lev_ = 2;
      end;
      _numval_ = _node_val_0_{10};
      if (_numval_ gt NN_P_Gatunek) then do;
         NN_P_Gatunek = _numval_;
         _nn_pred_lev_ = 3;
      end;
      NN_Gatunek = _tlevname_0_{_nn_pred_lev_};
   end;

   drop _numval_;
   drop _sumval_;
   drop _bias_;
   drop _tval_;
   drop _nval_;
   drop _badval_;
   drop _nn_pred_lev_;

